{"ast":null,"code":"import _defineProperty from \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/src/WeatherApp.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from 'emotion-theming';\nimport WeatherCard from './WeatherCard';\nimport useWeatherApi from './useWeatherApi';\nimport sunriseAndSunsetData from './sunrise-sunset.json';\nimport WeatherSetting from './WeatherSetting';\nimport { findLocation } from './utils';\nvar theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282'\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow: '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc'\n  }\n};\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.backgroundColor;\n});\nvar getMoment = function getMoment(locationName) {\n  var location = sunriseAndSunsetData.find(function (data) {\n    return data.locationName === locationName;\n  });\n  if (!location) return null;\n  var now = new Date();\n  var nowDate = Intl.DateTimeFormat('zh-TW', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).format(now).replace(/\\//g, '-');\n  var locationDate = location.time && location.time.find(function (time) {\n    return time.dataTime === nowDate;\n  });\n  var sunriseTimestamp = new Date(\"\".concat(locationDate.dataTime, \" \").concat(locationDate.sunrise)).getTime();\n  var sunsetTimestamp = new Date(\"\".concat(locationDate.dataTime, \" \").concat(locationDate.sunset)).getTime();\n  var nowTimeStamp = now.getTime();\n  return sunriseTimestamp <= nowTimeStamp && nowTimeStamp <= sunsetTimestamp ? 'day' : 'night';\n};\nvar WeatherApp = function WeatherApp() {\n  var _React$createElement;\n  console.log('--- invoke function component ---');\n  var storageCity = localStorage.getItem('cityName');\n  var _useState = useState(storageCity || '臺北市'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentCity = _useState2[0],\n    setCurrentCity = _useState2[1];\n  var currentLocation = findLocation(currentCity) || {};\n  var _useWeatherApi = useWeatherApi(currentLocation),\n    _useWeatherApi2 = _slicedToArray(_useWeatherApi, 2),\n    weatherElement = _useWeatherApi2[0],\n    fetchData = _useWeatherApi2[1];\n  var _useState3 = useState('light'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentTheme = _useState4[0],\n    setCurrentTheme = _useState4[1];\n  var _useState5 = useState('WeatherCard'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPage = _useState6[0],\n    setCurrentPage = _useState6[1];\n  // const { locationName } = weatherElement;\n\n  var moment = useMemo(function () {\n    return getMoment(currentLocation.sunriseCityName);\n  }, [currentLocation.sunriseCityName]);\n  useEffect(function () {\n    setCurrentTheme(moment === 'day' ? 'light' : 'dark');\n  }, [moment]);\n  useEffect(function () {\n    localStorage.setItem('cityName', currentCity);\n  }, [currentCity]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme[currentTheme],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, currentPage === 'WeatherCard' && /*#__PURE__*/React.createElement(WeatherCard, {\n    cityName: currentLocation.cityName,\n    weatherElement: weatherElement,\n    moment: moment,\n    fetchData: fetchData,\n    setCurrentPage: setCurrentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), currentPage === 'WeatherSetting' && /*#__PURE__*/React.createElement(WeatherSetting, (_React$createElement = {\n    setCurrentPage: setCurrentPage,\n    cityName: currentLocation.cityName,\n    setCurrentCity: setCurrentCity\n  }, _defineProperty(_React$createElement, \"setCurrentPage\", setCurrentPage), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 11\n  }), _React$createElement))));\n};\nexport default WeatherApp;","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","ThemeProvider","WeatherCard","useWeatherApi","sunriseAndSunsetData","WeatherSetting","findLocation","theme","light","backgroundColor","foregroundColor","boxShadow","titleColor","temperatureColor","textColor","dark","Container","div","getMoment","locationName","location","find","data","now","Date","nowDate","Intl","DateTimeFormat","year","month","day","format","replace","locationDate","time","dataTime","sunriseTimestamp","sunrise","getTime","sunsetTimestamp","sunset","nowTimeStamp","WeatherApp","console","log","storageCity","localStorage","getItem","currentCity","setCurrentCity","currentLocation","weatherElement","fetchData","currentTheme","setCurrentTheme","currentPage","setCurrentPage","moment","sunriseCityName","setItem","cityName"],"sources":["/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/src/WeatherApp.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from 'emotion-theming';\nimport WeatherCard from './WeatherCard';\nimport useWeatherApi from './useWeatherApi';\nimport sunriseAndSunsetData from './sunrise-sunset.json';\nimport WeatherSetting from './WeatherSetting';\nimport {findLocation} from './utils';\n\nconst theme = {\n  light: {\n    backgroundColor: '#ededed',\n    foregroundColor: '#f9f9f9',\n    boxShadow: '0 1px 3px 0 #999999',\n    titleColor: '#212121',\n    temperatureColor: '#757575',\n    textColor: '#828282',\n  },\n  dark: {\n    backgroundColor: '#1F2022',\n    foregroundColor: '#121416',\n    boxShadow:\n      '0 1px 4px 0 rgba(12, 12, 13, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.15)',\n    titleColor: '#f9f9fa',\n    temperatureColor: '#dddddd',\n    textColor: '#cccccc',\n  },\n};\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.backgroundColor};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst getMoment = locationName => {\n  const location = sunriseAndSunsetData.find(\n    data => data.locationName === locationName,\n  );\n\n  if (!location) return null;\n\n  const now = new Date();\n  const nowDate = Intl.DateTimeFormat('zh-TW', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  })\n    .format(now)\n    .replace(/\\//g, '-');\n\n  const locationDate =\n    location.time && location.time.find(time => time.dataTime === nowDate);\n  const sunriseTimestamp = new Date(\n    `${locationDate.dataTime} ${locationDate.sunrise}`,\n  ).getTime();\n  const sunsetTimestamp = new Date(\n    `${locationDate.dataTime} ${locationDate.sunset}`,\n  ).getTime();\n  const nowTimeStamp = now.getTime();\n\n  return sunriseTimestamp <= nowTimeStamp && nowTimeStamp <= sunsetTimestamp\n    ? 'day'\n    : 'night';\n};\n\nconst WeatherApp = () => {\n  console.log('--- invoke function component ---');\n\n  const storageCity = localStorage.getItem('cityName')\n\n  const [currentCity, setCurrentCity] = useState(storageCity ||'臺北市')\n\n  const currentLocation = findLocation(currentCity) || {};\n\n  const [weatherElement, fetchData] = useWeatherApi(currentLocation);\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [currentPage, setCurrentPage] = useState('WeatherCard');\n  // const { locationName } = weatherElement;\n\n  const moment = useMemo(() => getMoment(currentLocation.sunriseCityName), \n  [currentLocation.sunriseCityName]);\n\n  useEffect(() => {\n    setCurrentTheme(moment === 'day' ? 'light' : 'dark');\n  }, [moment]);\n\n  useEffect(() =>{\n    localStorage.setItem('cityName', currentCity);\n  }, [currentCity])\n\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n      <Container>\n        {currentPage === 'WeatherCard' && (\n          <WeatherCard\n            cityName = {currentLocation.cityName}\n            weatherElement={weatherElement}\n            moment={moment}\n            fetchData={fetchData}\n            setCurrentPage={setCurrentPage}\n          />\n        )}\n\n        {currentPage === 'WeatherSetting' && (\n          <WeatherSetting \n            setCurrentPage={setCurrentPage} \n            cityName = {currentLocation.cityName}\n            setCurrentCity = {setCurrentCity}\n            setCurrentPage = {setCurrentPage}\n            />\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}