{"ast":null,"code":"import _slicedToArray from \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/src/WeatherIcon.js\",\n  _templateObject,\n  _this = this;\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-thunderstorm.svg\";\nimport { ReactComponent as DayClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-clear.svg\";\nimport { ReactComponent as DayCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy-fog.svg\";\nimport { ReactComponent as DayCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-cloudy.svg\";\nimport { ReactComponent as DayFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-fog.svg\";\nimport { ReactComponent as DayPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-partially-clear-with-rain.svg\";\nimport { ReactComponent as DaySnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/day-snowing.svg\";\nimport { ReactComponent as NightThunderstorm } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-thunderstorm.svg\";\nimport { ReactComponent as NightClear } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-clear.svg\";\nimport { ReactComponent as NightCloudyFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy-fog.svg\";\nimport { ReactComponent as NightCloudy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-cloudy.svg\";\nimport { ReactComponent as NightFog } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-fog.svg\";\nimport { ReactComponent as NightPartiallyClearWithRain } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-partially-clear-with-rain.svg\";\nimport { ReactComponent as NightSnowing } from \"@svgr/webpack?-svgo,+titleProp,+ref!./images/night-snowing.svg\";\nvar weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [8, 9, 10, 11, 12, 13, 14, 19, 20, 29, 30, 31, 32, 38, 39],\n  isSnowing: [23, 37, 42]\n};\nvar weatherIcons = {\n  day: {\n    isThunderstorm: /*#__PURE__*/React.createElement(DayThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(DayClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(DayCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(DayCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(DayFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(DayPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(DaySnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    })\n  },\n  night: {\n    isThunderstorm: /*#__PURE__*/React.createElement(NightThunderstorm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }),\n    isClear: /*#__PURE__*/React.createElement(NightClear, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }),\n    isCloudyFog: /*#__PURE__*/React.createElement(NightCloudyFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }),\n    isCloudy: /*#__PURE__*/React.createElement(NightCloudy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }),\n    isFog: /*#__PURE__*/React.createElement(NightFog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }),\n    isPartiallyClearWithRain: /*#__PURE__*/React.createElement(NightPartiallyClearWithRain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }\n    }),\n    isSnowing: /*#__PURE__*/React.createElement(NightSnowing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    })\n  }\n};\nvar IconContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  flex-basis: 30%;\\n\\n  svg {\\n    max-height: 110px;\\n  }\\n\"])));\nvar weatherCode2Type = function weatherCode2Type(weatherCode) {\n  return Object.entries(weatherTypes).reduce(function (currentWeatherType, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      weatherType = _ref2[0],\n      weatherCodes = _ref2[1];\n    return weatherCodes.includes(Number(weatherCode)) ? weatherType : currentWeatherType;\n  }, '');\n};\nvar WeatherIcon = function WeatherIcon(_ref3) {\n  var currentWeatherCode = _ref3.currentWeatherCode,\n    moment = _ref3.moment;\n  var _useState = useState('isClear'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentWeatherIcon = _useState2[0],\n    setCurrentWeatherIcon = _useState2[1];\n  var theWeatherIcon = useMemo(function () {\n    return weatherCode2Type(currentWeatherCode);\n  }, [currentWeatherCode]);\n  useEffect(function () {\n    setCurrentWeatherIcon(theWeatherIcon);\n  }, [theWeatherIcon]);\n  return /*#__PURE__*/React.createElement(IconContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, weatherIcons[moment][currentWeatherIcon]);\n};\nexport default WeatherIcon;","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","weatherTypes","isThunderstorm","isClear","isCloudyFog","isCloudy","isFog","isPartiallyClearWithRain","isSnowing","weatherIcons","day","night","IconContainer","div","weatherCode2Type","weatherCode","Object","entries","reduce","currentWeatherType","weatherType","weatherCodes","includes","Number","WeatherIcon","currentWeatherCode","moment","currentWeatherIcon","setCurrentWeatherIcon","theWeatherIcon"],"sources":["/Users/archerh/Desktop/weather-app-setting-page-with-controlled-component-forked/src/WeatherIcon.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from '@emotion/styled';\nimport { ReactComponent as DayThunderstorm } from './images/day-thunderstorm.svg';\nimport { ReactComponent as DayClear } from './images/day-clear.svg';\nimport { ReactComponent as DayCloudyFog } from './images/day-cloudy-fog.svg';\nimport { ReactComponent as DayCloudy } from './images/day-cloudy.svg';\nimport { ReactComponent as DayFog } from './images/day-fog.svg';\nimport { ReactComponent as DayPartiallyClearWithRain } from './images/day-partially-clear-with-rain.svg';\nimport { ReactComponent as DaySnowing } from './images/day-snowing.svg';\nimport { ReactComponent as NightThunderstorm } from './images/night-thunderstorm.svg';\nimport { ReactComponent as NightClear } from './images/night-clear.svg';\nimport { ReactComponent as NightCloudyFog } from './images/night-cloudy-fog.svg';\nimport { ReactComponent as NightCloudy } from './images/night-cloudy.svg';\nimport { ReactComponent as NightFog } from './images/night-fog.svg';\nimport { ReactComponent as NightPartiallyClearWithRain } from './images/night-partially-clear-with-rain.svg';\nimport { ReactComponent as NightSnowing } from './images/night-snowing.svg';\n\nconst weatherTypes = {\n  isThunderstorm: [15, 16, 17, 18, 21, 22, 33, 34, 35, 36, 41],\n  isClear: [1],\n  isCloudyFog: [25, 26, 27, 28],\n  isCloudy: [2, 3, 4, 5, 6, 7],\n  isFog: [24],\n  isPartiallyClearWithRain: [\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    19,\n    20,\n    29,\n    30,\n    31,\n    32,\n    38,\n    39,\n  ],\n  isSnowing: [23, 37, 42],\n};\n\nconst weatherIcons = {\n  day: {\n    isThunderstorm: <DayThunderstorm />,\n    isClear: <DayClear />,\n    isCloudyFog: <DayCloudyFog />,\n    isCloudy: <DayCloudy />,\n    isFog: <DayFog />,\n    isPartiallyClearWithRain: <DayPartiallyClearWithRain />,\n    isSnowing: <DaySnowing />,\n  },\n  night: {\n    isThunderstorm: <NightThunderstorm />,\n    isClear: <NightClear />,\n    isCloudyFog: <NightCloudyFog />,\n    isCloudy: <NightCloudy />,\n    isFog: <NightFog />,\n    isPartiallyClearWithRain: <NightPartiallyClearWithRain />,\n    isSnowing: <NightSnowing />,\n  },\n};\n\nconst IconContainer = styled.div`\n  flex-basis: 30%;\n\n  svg {\n    max-height: 110px;\n  }\n`;\n\nconst weatherCode2Type = weatherCode =>\n  Object.entries(weatherTypes).reduce(\n    (currentWeatherType, [weatherType, weatherCodes]) =>\n      weatherCodes.includes(Number(weatherCode))\n        ? weatherType\n        : currentWeatherType,\n    '',\n  );\n\nconst WeatherIcon = ({ currentWeatherCode, moment }) => {\n  const [currentWeatherIcon, setCurrentWeatherIcon] = useState('isClear');\n\n  const theWeatherIcon = useMemo(() => weatherCode2Type(currentWeatherCode), [\n    currentWeatherCode,\n  ]);\n\n  useEffect(() => {\n    setCurrentWeatherIcon(theWeatherIcon);\n  }, [theWeatherIcon]);\n\n  return (\n    <IconContainer>{weatherIcons[moment][currentWeatherIcon]}</IconContainer>\n  );\n};\n\nexport default WeatherIcon;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}